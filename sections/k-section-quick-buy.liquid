{% unless product.type == 'Wholesale' %}
  {{ 'k-quick-buy-styles.css' | asset_url | stylesheet_tag }}
  {{ 'component-card.css' | asset_url | stylesheet_tag }}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <div class="color-{{ section.settings.color_scheme }} isolate gradient">
    <div class="section-{{ section.id }}-padding">
      <div class="quick-buy">
        <div class="page-width">
          <div class="title-wrapper-with-link justify-center title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
            {% if section.settings.title != blank %}
              <h2 class="title inline-richtext {{ section.settings.heading_size }} ">
                {{ section.settings.title }}
              </h2>
            {% endif %}
            {% if section.settings.description != blank %}
              <div class="collection__description center rte  {{ section.settings.description_style }}  {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
                {{ section.settings.description }}
              </div>
            {%- endif -%}
          </div>
            {% if product.has_only_default_variant %}
              <!-- Pro kits with Quantity Breaks-->
              {% assign grid_size = 0 %}

              {% for i in product.metafields.custom.price_tiers.value %}
                {% assign grid_size = grid_size | plus: 1 %}
              {% endfor %}
              
              <div class="grid grid--{{ grid_size | plus: 1 }}-col-desktop grid--2-col-tablet-down">
                <div class="grid__item">
                  {% render 'card-quick-buy', card_product: product, variant: product.selected_or_first_available_variant, index: forloop.index0 %}
                </div>
                {% for i in product.metafields.custom.price_tiers.value %}
                  <div class="grid__item">
                    {% render 'card-quick-buy', card_product: product, tier_item: i, index: forloop.index %}
                  </div>
                {% endfor %}
              </div>
            {% else %}
              <!-- Regular Product Variants / Starter kits -->
              <div class="grid grid--{{ product.variants.size }}-col-desktop grid--2-col-tablet-down">
                {% for variant in product.variants %}
                  <div class="grid__item">
                      {% render 'card-quick-buy', card_product: product, variant: variant, index: forloop.index0 %}
                  </div>
                {% endfor %}
              </div>
            {% endif  %}
        </div>
      </div>
    </div>
  </div>

  <script>
    // Get all elements with class 'quick-product-box' within elements with class 'quick-variants'
    var quickProductBoxes = document.querySelectorAll('.quick-product-box');

    // Loop through each element
    quickProductBoxes.forEach(function(element, i) {
      // Get the current element
      var thisElement = element;

      // Find the input element with class 'product-variant-id' within the current element
      var variantIdInput = thisElement.querySelector('input.product-variant-id');

      // Set the 'value' of the input element to the 'data-variant-id' attribute value
      variantIdInput.value = thisElement.dataset.variantId;

      // Check if the element has a 'data-qty' attribute
      if (thisElement.dataset.qty) {
        // Create a new hidden input element
        var quantityInput = document.createElement('input');
        quantityInput.type = 'hidden';
        quantityInput.name = 'quantity';
        quantityInput.value = thisElement.dataset.qty;

        // Find the form element within the current element
        var formElement = thisElement.querySelector('form');

        // Append the new hidden input element to the form
        formElement.appendChild(quantityInput);
      }
    });
  </script>
{% endunless %}

{% schema %}
  {
    "name": "Quick Buy",
    "settings": [
      {
        "type": "inline_richtext",
        "id": "title",
        "default": "Featured collection",
        "label": "t:sections.featured-collection.settings.title.label"
      },
      {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
          },
          {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
          },
          {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
          }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
      },
      {
        "type": "richtext",
        "id": "description",
        "label": "t:sections.featured-collection.settings.description.label"
      },
      {
        "type": "select",
        "id": "description_style",
        "label": "t:sections.featured-collection.settings.description_style.label",
        "options": [
          {
            "value": "body",
            "label": "t:sections.featured-collection.settings.description_style.options__1.label"
          },
          {
            "value": "subtitle",
            "label": "t:sections.featured-collection.settings.description_style.options__2.label"
          },
          {
            "value": "uppercase",
            "label": "t:sections.featured-collection.settings.description_style.options__3.label"
          }
        ],
        "default": "body"
      },
      {
        "id": "image",
        "type": "image_picker",
        "label": "Image"
      }
    ],
    "presets": [
      {
        "name": "Quick Buy"
      }
    ]
  }
{% endschema %}
